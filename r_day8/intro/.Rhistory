getwd()
#get the working directory/ pwd in R
getwd
#get the working directory/ pwd in R
getwd()
#change dir
setwd()
#create new dir
dir.create("data")
dir.create("data/raw_data")
#create variable
x <- 2+2
class(x)
y <- "Hallihallo"
class(y)
z <- TRUE
class(z)
w <- charToRaw("Moinsis")
class(w)
d <- data.frame(matrix(1:6, nrow = 2, ncol = 3))
class(d)
c <- 1+2i
class(c)
data()
#get the iris data
data("iris")
force(iris)
View(iris)
class(iris$Sepal.Length)
plot(iris)
boxplot(data=iris, x=iris$Sepal.Length, y=iris$Species)
boxplot(data=iris, iris$Sepal.Length~iris$Species)
install.packages("ggplot2")
# ggplot ------------
library(ggplot2)
install.packages(c("readxl","plotly"))
install.packages("tidyverse")
#basic components of every plot
#mapping -> data
#aestetics
ggplot(data = iris, mapping = aes(x = iris$Species, y = iris$Sepal.Length)) + geom_line()
#basic components of every plot
#mapping -> data
#aesthetics -> y und y Achsen definieren, color, size, etc.
#geometrics -> what kind of plot
# u always need all three to plot sth
ggplot(data = iris, mapping = aes(x = Species, y = Sepal.Length)) + geom_line()
#basic components of every plot
#mapping -> data
#aesthetics -> y und y Achsen definieren, color, size, etc.
#geometrics -> what kind of plot
# u always need all three to plot sth
ggplot(data = iris, mapping = aes(x = Species, y = Sepal.Length)) + geom_boxplot()
#basic components of every plot
#mapping -> data
#aesthetics -> y und y Achsen definieren, color, size, etc.
#geometrics -> what kind of plot
# u always need all three to plot sth
ggplot(data = iris, mapping = aes(x = Species, y = Sepal.Length, fill=Species)) + geom_boxplot()
ggplot(data = iris, mapping = aes(x = iris$Sepal.Width, y = iris$Sepal.Length)) + geom_point()
ggplot(data = iris, mapping = aes(x = iris$Petal.Length, y = iris$Sepal.Length)) + geom_point()
ggplot(data = iris, mapping = aes(x = iris$Petal.Length, y = iris$Sepal.Length, col = Species)) + geom_point()
ggplot(data = iris, mapping = aes(x = iris$Petal.Length, y = iris$Sepal.Length, shape = Species)) + geom_point()
ggplot(data = iris, mapping = aes(x = iris$Petal.Length, y = iris$Sepal.Length, size = Species)) + geom_point()
ggplot(data = iris, mapping = aes(x = iris$Petal.Length, y = iris$Sepal.Length, size = iris$Petal.Width)) + geom_point()
plot1 <- ggplot(data = iris, mapping = aes(x = iris$Petal.Length, y = iris$Sepal.Length, col = Species)) + geom_point()
plot1 + ggsave("plot1.pdf", plot1)
#weiter spezifizieren
plot1 ++ ggsave("plot1_tidy.pdf", plot1, width = 8, height = 6, units = "cm", dpi = 300)
plot1 ++ ggsave("plot1_compressed.pdf", plot1, width = 8, height = 6, units = "cm", dpi = 300, compression = "lzw")
plot1 ++ ggsave("plot1_compressed.pdf", plot1, width = 8, height = 6, units = "cm", dpi = 300, compression = 'lzw')
plot1 ++ ggsave("plot1_compressed.pdf", plot1, width = 8, height = 6, units = "cm", dpi = 300, compression="lzw")
plot1 ++ ggsave("plot1_compressed.pdf", plot1, width = 8, height = 6, units = "cm", dpi = 300, compression = "lzw")
plot1 ++ ggsave("plot1_compressed.tiff", plot1, width = 8, height = 6, units = "cm", dpi = 300, compression = "lzw")
library(tidyr)
View(iris)
try1 <- spread(data = iris, key = Species, iris$Sepal.Length)
try1 <- spread(data = iris, key = Species, Sepal.Length)
#check ob die Daten normalverteilt sind
hist(iris$Sepal.Length)
hist(iris$Sepal.Width)
hist(iris$Petal.Length)
hist(iris$Petal.Width)
#auch mÃ¶glich mit
boxplot(iris$Sepal.Width)
data()
data(ChickWeight)
force(ChickWeight)
View(ChickWeight)
data()
ggplot(data = ChickWeight, aes(x = Time, y = weight, col = Diet)) + geom_point()
ggplot(data = ChickWeight, aes(x = Time, y = weight, col = Diet)) + geom_line()
ggplot(data = ChickWeight, aes(x = Time, y = weight, col = Diet)) + geom_boxplot()
ggplot(data = ChickWeight, aes(x = Time, y = weight, col = Diet)) + geom_linerange()
ggplot(data = ChickWeight, aes(x = Time, y = weight, col = Diet)) + geom_bar()
ggplot(data = ChickWeight, aes(x = Time, y = weight, col = Diet)) + geom_point()
ggplot(data = ChickWeight, aes(x = Time, y = weight, col = Chick)) + geom_line()
ggplot(data = ChickWeight, aes(x = Time, y = weight, col = Diet)) +
geom_line() +
facet_wrap( ~ Diet)
ggplot(data = ChickWeight, aes(x = Time, y = weight, col = Diet)) +
geom_point() +
facet_wrap( ~ Diet)
ggplot(data = ChickWeight, aes(x = Diet, y = weight, col = Time)) +
geom_point()
library(dplyr)
data_msd <- ChickWeight %>%                           # Get mean & standard deviation by group
group_by(Diet) %>%
summarise_at(vars(Time),
list(mean = mean,
sd = sd)) %>%
as.data.frame()
data_msd                                       # Print means & standard deviations
View(data_msd)
p<- ggplot(data_msd, aes(x=ChickWeight$Time, y=data_msd$mean, group=Diet, color=Diet)) +
geom_line() +
geom_point()+
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2,
position=position_dodge(0.05))
View(p)
print(p)
p<- ggplot(data_msd, aes(x=ChickWeight$Time, y=mean, group=Diet, color=Diet)) +
geom_line() +
geom_point()+
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2,
position=position_dodge(0.05))
print(p)
data_msd <- ChickWeight %>%                           # Get mean & standard deviation by group
group_by(c(Diet, Time)) %>%
summarise_at(vars(Time),
list(mean = mean,
sd = sd)) %>%
as.data.frame()
data_msd <- ChickWeight %>%                           # Get mean & standard deviation by group
group_by(Diet, Time) %>%
summarise_at(vars(Time),
list(mean = mean,
sd = sd)) %>%
as.data.frame()
data_msd <- ChickWeight %>%                           # Get mean & standard deviation by group
group_by(Diet, Time) %>%
summarise_at(vars(Time),
list(mean = mean,
sd = sd)) %>%
as.data.frame()
mean_sd <- ChickWeight %>% group_by(Time, Diet) %>%
summarise(mean_weight=mean(weight))
View(mean_sd)
beauty <- ggplot(mean_sd, aes(x=Time, y=mean_weight, group=Diet, color=Diet)) +
geom_line() +
geom_point()+
)
beauty <- ggplot(mean_sd, aes(x=Time, y=mean_weight, group=Diet, color=Diet)) +
geom_line() +
geom_point()
View(beauty)
print(beauty)
data_msd <- ChickWeight %>%                           # Get mean & standard deviation by group
group_by(Time, Diet) %>%
summarise_at(vars(Time),
list(mean = mean,
sd = sd)) %>%
as.data.frame()
rlang::last_error()
data_msd <- ChickWeight %>%                           # Get mean & standard deviation by group
group_by(Time) %>%
summarise_at(vars(Time),
list(mean = mean,
sd = sd)) %>%
as.data.frame()
data_msd <- ChickWeight %>%                           # Get mean & standard deviation by group
group_by(Diet) %>%
summarise_at(vars(Time),
list(mean = mean,
sd = sd)) %>%
as.data.frame()
data_msd <- ChickWeight %>%                           # Get mean & standard deviation by group
group_by(Diet, ChickWeight$Time) %>%
summarise_at(vars(Time),
list(mean = mean,
sd = sd)) %>%
as.data.frame()
View(data_msd)
beauty_with_sd <- ggplot(data_msd, aes(x=ChickWeight$Time, y=mean, group=Diet, color=Diet)) +
geom_line() +
geom_point()+
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2,
position=position_dodge(0.05))
print(p)
ggplot(iris,
aes(x=Species, y=Petal.Length)) +
geom_boxplot() +
facet_wrap(Species)
ggplot(iris,
aes(x=Species, y=Petal.Length)) +
geom_boxplot() +
facet_wrap(~Species)
ggplot(data = ChickWeight, aes(x = Time, y = weight, col = Diet)) +
geom_point() +
geom_smooth()
facet_wrap( ~ Diet)
ggplot(data = ChickWeight, aes(x = Time, y = weight, col = Diet)) +
geom_point() +
geom_smooth()
facet_wrap( ~ Diet, scales = "free")
mean <- ChickWeight %>% group_by(Time, Diet) %>%
summarise(mean_weight=mean(weight))
beauty <- ggplot(mean, aes(x=Time, y=mean_weight, group=Diet, color=Diet)) +
geom_line() +
geom_point()
print(beauty)
ggplot(data = ChickWeight, aes(x = Chick, y = weight, col = Chick)) +
geom_line()
ggplot(data = ChickWeight, aes(x = Chick, y = weight, col = Diet)) +
geom_line()
ggplot(data = ChickWeight, aes(x = Chick, y = weight, col = Diet)) +
geom_bar()
ggplot(data = ChickWeight, aes(x = Chick, y = weight, col = Diet)) +
geom_bar()
ggplot(data = ChickWeight, aes(x = Chick, y = weight, col = Diet)) +
geom_point()
ggplot(data = ChickWeight, aes(x = weight, y = Chick, col = Diet)) +
geom_line()
ggplot(data = ChickWeight, aes(x = Diet, y = weight, col = Time)) +
geom_point()
ggplot(data = ChickWeight, aes(x = Time, y = weight, col = Chick)) +
geom_line()
View(iris)
iris_long <- gather(iris, leave, measurement, Sepal.Length:Petal.Width, factor_key=TRUE)
library(tidyr)
iris_long <- gather(iris, leave, measurement, Sepal.Length:Petal.Width, factor_key=TRUE)
View(iris_long)
